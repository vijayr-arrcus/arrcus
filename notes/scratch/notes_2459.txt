10gx4    4x 10Gbps break-out  --- 4 10G ports, each 10G port takes 2 lanes. [Not valid config]
10gx8    8x 10Gbps break-out  --- 8 10G ports, each 10G port takes 1 lanes. [Valid, need to validate configuration]
25gx4    4x 25Gbps break-out  --- 4 25G ports, each 25G port takes 2 lanes. [Not valid config]
25gx8    8x 25Gbps break-out  --- 8 25G ports, each 25G port takes 1 lanes. [Validated traffic]
40gx2    2x 40Gbps break-out  --- 2 40G ports, each 40G port takes 4 lanes. [Valid, need to validate config]
50gx2    2x 50Gbps break-out  --- 2 50G ports, each 50G port takes 4 lanes. [Not valid config]
50gx4    4x 50Gbps break-out  --- 4 50G ports, each 50G port takes 2 lanes. [Not Valid config]
100gx2   2x 100Gbps break-out --- 2 100G ports, each 100G port takes 4 lanes. [Validated traffic]
100gx4   4x 100Gbps break-out --- 4 100G ports, each 100G port takes 2 lanes. [Validated traffic]
200gx2   2x 200Gbps break-out --- 2 200G ports, each 200G port takes 4 lanes. [Validated traffic]

typedef enum dpal_breakout_mode_e_ {
  DPAL_BRKOUT_MODE_INVALID = BRKOUT_MODE_INVALID,
  DPAL_BRKOUT_MODE_10Gx4   = BRKOUT_MODE_10Gx4, -- not valid for TD4.
  DPAL_BRKOUT_MODE_25Gx4   = BRKOUT_MODE_25Gx4, -- Not valid for TD4
  DPAL_BRKOUT_MODE_40Gx2   = BRKOUT_MODE_40Gx2,
  DPAL_BRKOUT_MODE_50Gx2   = BRKOUT_MODE_50Gx2,
  DPAL_BRKOUT_MODE_10Gx8   = BRKOUT_MODE_10Gx8,
  DPAL_BRKOUT_MODE_25Gx8   = BRKOUT_MODE_25Gx8,
  DPAL_BRKOUT_MODE_50Gx4   = BRKOUT_MODE_50Gx4,
  DPAL_BRKOUT_MODE_100Gx4  = BRKOUT_MODE_100Gx4,
  DPAL_BRKOUT_MODE_100Gx2  = BRKOUT_MODE_100Gx2,
  DPAL_BRKOUT_MODE_200Gx2  = BRKOUT_MODE_200Gx2,
  /* Following are additional enums for dpal */
  DPAL_BRKOUT_MODE_40Gx1   = DPAL_BRKOUT_MODE_200Gx2 + 1,
  DPAL_BRKOUT_MODE_100Gx1  = DPAL_BRKOUT_MODE_40Gx1 + 1,
  DPAL_BRKOUT_MODE_400Gx1  = DPAL_BRKOUT_MODE_100Gx1 + 1,
  DPAL_BRKOUT_MODE_1Gx4    = DPAL_BRKOUT_MODE_400Gx1 + 1,
  DPAL_BRKOUT_MODE_200Gx1  = DPAL_BRKOUT_MODE_1Gx4 + 1,
  DPAL_BRKOUT_MODE_100Gx2_FOR_200G  = DPAL_BRKOUT_MODE_200Gx1 + 1,
  DPAL_BRKOUT_MODE_50Gx4_FOR_200G  = DPAL_BRKOUT_MODE_100Gx2_FOR_200G + 1,
  DPAL_BRKOUT_MODE_MAX,
} dpal_breakout_mode_e;

X11 32x400G ports.
PAM4 8x50G serdes.

static brkout_mode_attrs_t brkout_attrs[] = {
  {.num_lanes = 0, .num_ports = 0, .speed = 0, .pbm = 0}, //Unused as brkout enum start at 1
  {.num_lanes = 1, .num_ports = 4, .speed = 10000, .pbm = 0xF}, --- Not Valid for TD4, only 4/8 lanes are being used, in theory its fine but taking a stand that if not all lanes are not covered its not valid.
  {.num_lanes = 1, .num_ports = 4, .speed = 25000, .pbm = 0xF}, --- Not Valid for TD4, only 4/8 lanes are being used, however less likely to have the SFP support such an application.
  {.num_lanes = 2, .num_ports = 2, .speed = 40000, .pbm = 0x5}, --- Not valid for TD4, only 4/8 lanes are being used.
  {.num_lanes = 2, .num_ports = 2, .speed = 50000, .pbm = 0x5}, --- Not valid for TD4, only 4/8 lanes are being used.
  {.num_lanes = 1, .num_ports = 8, .speed = 10000, .pbm = 0xFF}, --- valid for TD4.
  {.num_lanes = 1, .num_ports = 8, .speed = 25000, .pbm = 0xFF}, --- valid for TD4.
  {.num_lanes = 2, .num_ports = 4, .speed = 50000, .pbm = 0x55}, --- Valid for TD4.
  {.num_lanes = 2, .num_ports = 4, .speed = 100000, .pbm = 0x55}, --- Valid for TD4.
  {.num_lanes = 4, .num_ports = 2, .speed = 100000, .pbm = 0x11}, --- Valid for TD4.
  {.num_lanes = 4, .num_ports = 2, .speed = 200000, .pbm = 0x11}, --- Valid for TD4.
  {.num_lanes = 4, .num_ports = 1, .speed = 40000, .pbm = 0x1},  --- Not valid for TD4, only 4/8 lanes are being used.
  {.num_lanes = 4, .num_ports = 1, .speed = 100000, .pbm = 0x1}, --- Not valid for TD4, only 4/8 lanes are being used.
  {.num_lanes = 8, .num_ports = 1, .speed = 400000, .pbm = 0x1}, --- Valid for TD4.
  {.num_lanes = 1, .num_ports = 4, .speed = 1000, .pbm = 0xF}, --- Not valid for TD4, only 4/8 lanes are being used.
  {.num_lanes = 4, .num_ports = 1, .speed = 200000, .pbm = 0x1}, // 200G brkout -- Not valid for TD4.
  {.num_lanes = 2, .num_ports = 2, .speed = 100000, .pbm = 0x5}, // 200G brkout --- Not valid for TD4.
  {.num_lanes = 1, .num_ports = 4, .speed = 50000, .pbm = 0xF}, // 200G brkout --- Not valid for TD4.
};



    {10000,  1, bcmPortPhyFecNone,         ltswPortVCO20P625G},
    {10000,  1, bcmPortPhyFecBaseR,        ltswPortVCO20P625G},
    {40000,  4, bcmPortPhyFecNone,         ltswPortVCO20P625G},
    {40000,  4, bcmPortPhyFecBaseR,        ltswPortVCO20P625G},
    {40000,  2, bcmPortPhyFecNone,         ltswPortVCO20P625G},
    {25000,  1, bcmPortPhyFecNone,         ltswPortVCO25P781G},
    {25000,  1, bcmPortPhyFecBaseR,        ltswPortVCO25P781G},
    {25000,  1, bcmPortPhyFecRsFec,        ltswPortVCO25P781G},
    {50000,  1, bcmPortPhyFecNone,         ltswPortVCO25P781G},
    {50000,  1, bcmPortPhyFecRsFec,        ltswPortVCO25P781G},
    {50000,  2, bcmPortPhyFecNone,         ltswPortVCO25P781G},
    {50000,  2, bcmPortPhyFecRsFec,        ltswPortVCO25P781G},
    {100000, 2, bcmPortPhyFecNone,         ltswPortVCO25P781G},
    {100000, 2, bcmPortPhyFecRsFec,        ltswPortVCO25P781G},
    {100000, 4, bcmPortPhyFecNone,         ltswPortVCO25P781G},
    {100000, 4, bcmPortPhyFecRsFec,        ltswPortVCO25P781G},
    {200000, 4, bcmPortPhyFecNone,         ltswPortVCO25P781G},
    {50000,  1, bcmPortPhyFecRs544,        ltswPortVCO26P562G},
    {50000,  1, bcmPortPhyFecRs272,        ltswPortVCO26P562G},
    {50000,  2, bcmPortPhyFecRs544,        ltswPortVCO26P562G},
    {100000, 2, bcmPortPhyFecRs272,        ltswPortVCO26P562G},
    {100000, 2, bcmPortPhyFecRs544,        ltswPortVCO26P562G},
    {100000, 4, bcmPortPhyFecRs544,        ltswPortVCO26P562G},
    {200000, 4, bcmPortPhyFecRs544,        ltswPortVCO26P562G},
    {200000, 4, bcmPortPhyFecRs544_2xN,    ltswPortVCO26P562G},
    {200000, 4, bcmPortPhyFecRs272,        ltswPortVCO26P562G},
    {200000, 4, bcmPortPhyFecRs272_2xN,    ltswPortVCO26P562G},
    {400000, 8, bcmPortPhyFecRs544_2xN,    ltswPortVCO26P562G},
    {400000, 8, bcmPortPhyFecRs272_2xN,    ltswPortVCO26P562G}
};

/*! TD4 force speed abilities and their VCO rates. */
static const ctsw_port_fs_ability_table_entry_t_t bcm56780_a0_fs_ability_table[] =
{
    /* port_speed, num_lanes, fec_type, vco */
    {10000,  1, bcmPortPhyFecNone,         ctswPortVCO20P625G},
    {10000,  1, bcmPortPhyFecBaseR,        ctswPortVCO20P625G},
    {40000,  4, bcmPortPhyFecNone,         ctswPortVCO20P625G},
    {40000,  4, bcmPortPhyFecBaseR,        ctswPortVCO20P625G},
    {40000,  2, bcmPortPhyFecNone,         ctswPortVCO20P625G},
    {25000,  1, bcmPortPhyFecNone,         ctswPortVCO25P781G},
    {25000,  1, bcmPortPhyFecBaseR,        ctswPortVCO25P781G},
    {25000,  1, bcmPortPhyFecRsFec,        ctswPortVCO25P781G},
    {50000,  1, bcmPortPhyFecRsFec,        ctswPortVCO25P781G},
    {50000,  2, bcmPortPhyFecNone,         ctswPortVCO25P781G},
    {50000,  2, bcmPortPhyFecRsFec,        ctswPortVCO25P781G},
    {100000, 2, bcmPortPhyFecRsFec,        ctswPortVCO25P781G},
    {100000, 4, bcmPortPhyFecNone,         ctswPortVCO25P781G},
    {100000, 4, bcmPortPhyFecRsFec,        ctswPortVCO25P781G},
    {50000,  1, bcmPortPhyFecRs544,        ctswPortVCO26P562G},
    {50000,  1, bcmPortPhyFecRs272,        ctswPortVCO26P562G},
    {50000,  2, bcmPortPhyFecRs544,        ctswPortVCO26P562G},
    {100000, 2, bcmPortPhyFecRs272,        ctswPortVCO26P562G},
    {100000, 2, bcmPortPhyFecRs544,        ctswPortVCO26P562G},
    {100000, 4, bcmPortPhyFecRs544,        ctswPortVCO26P562G},
    {200000, 4, bcmPortPhyFecRs544,        ctswPortVCO26P562G},
    {200000, 4, bcmPortPhyFecRs544_2xN,    ctswPortVCO26P562G},
    {200000, 4, bcmPortPhyFecRs272,        ctswPortVCO26P562G},
    {200000, 4, bcmPortPhyFecRs272_2xN,    ctswPortVCO26P562G},
    {400000, 8, bcmPortPhyFecRs544_2xN,    ctswPortVCO26P562G},
    {400000, 8, bcmPortPhyFecRs272_2xN,    ctswPortVCO26P562G}
};



