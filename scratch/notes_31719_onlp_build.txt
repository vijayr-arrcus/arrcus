sudo rm -fr ~/coverity_tmp_onl


sudo rm -fr ~/onl-testbed
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      olddockers=$(docker ps -a -f status=exited| grep builder | awk '{print $NF}'); if [ -n "$olddockers" ]; then docker rm $olddockers; else echo 0; fi


mkdir ~/coverity_tmp_onl


git clone git@github.com:Arrcus/onl-testbed.git
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      cd ~/onl-testbed; git checkout <BRANCH>; git pull


cd ~/onl-testbed; git submodule update --init -- sm/ONL; git -C sm/ONL submodule update --init -- sm


cd ~/onl-testbed; git pull --ff-only; git submodule update --remote; git submodule foreach --quiet 'cd $toplevel; git add -u $path'


cd ~/onl-testbed; sudo chown -R `id -un`:`id -gn` .


cd ~/onl-testbed; git clean -dfx


cd ~/onl-testbed; git -C sm/ONL clean -dfx


cd ~/onl-testbed; git ls-tree -r --name-only HEAD |sed -nE '/[.]module$$/s=^=$*/sm/ONL/=p' |xargs rm -f


cd ~/onl-testbed; git -C sm/ONL ls-tree --name-only -r HEAD |awk '! /\/PKG\.yml$$/ {next} $$0 ~ "packages/base/(arm|powerpc|amd64/kernels/|amd64/upgrade/|amd64/onlp/)|packages/platforms/" {print "sm/ONL/" $$0 ".disabled"}' |xargs touch


cd ~/onl-testbed; wget https://www.kernel.org/pub/linux/kernel/v4.x/linux-4.19.84.tar.xz


cd ~/onl-testbed; ln -v linux-4.19.84.tar.xz sm/ONL/packages/base/any/kernels/archives/


cd ~/onl-testbed; sed -i 's/\.\.\/scripts\///g' packages/base/amd64/kernels/kernel-4.19-lts-x86-64-all/PKG.yml packages/base/amd64/upgrade/PKG.yml


cd ~/onl-testbed; sed -i '/arcos-sa-packages.yml\|arcos-silicon.yml/d' builds/any/rootfs/rfs.yml


cd ~/onl-testbed; sed -i '/"--start-cacher"/i\g_docker_arguments += " -v ~/coverity_tmp_onl:/tmp/coverity_tmp:rw"' docker/tools/onlbuilder

cd ~/onl-testbed; ln ~/cov-analysis-linux64-2021.12.0.sh sm/ONL/docker/images/builder9/1.3/cov-analysis-linux64-2021.12.0.sh; ln ~/license.dat sm/ONL/docker/images/builder9/1.3/license.dat


cd ~/onl-testbed; echo -e "ARG VERSION=2021.12.0\nRUN mkdir -p /tmp/coverity_files\nCOPY cov-analysis-linux64-\$VERSION.sh /tmp/coverity_files\nCOPY license.dat /tmp/coverity_files\nRUN sh /tmp/coverity_files/cov-analysis-linux64-\$VERSION.sh
-q --installation.dir=/opt/coverity/analysis/\$VERSION --license.agreement=agree --license.region=0 --license.type.choice=0 --license.cov.path=/tmp/coverity_files/license.dat --component.sdk=false --component.skip.documentation=true && rm /tmp
/coverity_files/cov-analysis-linux64-\$VERSION.sh /tmp/coverity_files/license.dat\nENV PATH="/opt/coverity/analysis/\$VERSION/bin:${PATH}"\nRUN cov-configure --compiler cc --comptype gcc --template\nRUN cov-configure --compiler c++ --comptype
g++ --template\nRUN cov-configure --gcc --xml-option=\":<pre_trans><options><replace_arg_regex><replace>'-D(.*)'</replace><with>-D\$1</with></replace_arg_regex></options></pre_trans>\"\nRUN cov-configure --python" >> sm/ONL/docker/images/build
er9/1.3/Dockerfile


cd ~/onl-testbed; docker rmi -f opennetworklinux/builder9:1.3


cd ~/onl-testbed; sed -i 's|c = "/usr/bin/sudo -E -u %s %s" % (g_user.name, " ".join(ops.command))|c = "/usr/bin/sudo -E-u %s /opt/coverity/analysis/2021.12.0/bin/cov-build --dir /tmp/coverity_tmp --fs-capture-search . --fs-capture-search-excl
ude-regex ""^/home/builder/onl-testbed/builds/amd64/rootfs/builds*"" %s" % (g_user.name, " ".join(ops.command))|g' sm/ONL/docker/tools/docker_shell


cd ~/onl-testbed/sm/ONL/docker/images/builder9/1.3; make build


cd ~/onl-testbed; /home/builder/onl-testbed/docker/tools/onlbuilder -9 --hostname onlbuilder9 --isolate --non-interactive --no-mount-current --volumes /home/builder/onl-testbed --command /home/builder/onl-testbed/onl-make.sh


cd ~/onl-testbed; cov-manage-emit --dir ~/coverity_tmp_onl add-other-hosts


cd ~/onl-testbed; cov-analyze --dir ~/coverity_tmp_onl -j auto --all --enable-constraint-fpp --enable-fnptr --enable-virtual --webapp-security --allow-unmerged-emits


cd ~/onl-testbed; cov-commit-defects --dir ~/coverity_tmp_onl --stream onl-arrcus-stretch --host 10.9.42.59 --port 8080 --auth-key-file ~/auth_keys/auth.key
