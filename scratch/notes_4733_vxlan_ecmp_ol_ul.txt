npci-BL6-34# show dpal object-type dpal-v4-route generic-entries entry vrf_id:1073741826,prefix:10.10.12.1/32
generic-entries entry vrf_id:1073741826,prefix:10.10.12.1/32
 entry
                                                                                                     PENDING  PENDING
                                                 ATTR  ATTR                                          PARENT   PARENT
KEY                                     STATE    NAME  VALUE  PARENT TYPE         PARENT KEY         TYPE     KEY
-----------------------------------------------------------------------------------------------------------------------
vrf_id:1073741826,prefix:10.10.12.1/32  created               dpal-vrf            vrf_id:1073741826
                                                              dpal-nexthop-group  ecmpid:1073743323

// The route objects next hop could be any of them, and it could also be that the nexthop group is a list a of VXLAN PATHS.
static ret_code_e
construct_xgs_route(struct ds_fib_route_info_ *info, dpal_obj_t *obj,
        ds_bcm_xgs_route_v4_t *v4, ds_bcm_xgs_route_v6_t *v6)
{
  uint32_t xgs_deps_type;
  uint32_t pfx_len;
  bool is_host = false;

  switch (info->deps_type) {
    case DPAL_NEXTHOP:
      /* gen_bcm_xgs_obj.h: */
      /* #define BCM_XGS_NH DS_BCM_XGS_NH_TBL_TBL_CODE 25500 */
      xgs_deps_type = BCM_XGS_NH;
      break;

    case DPAL_NEXTHOP_GROUP:
      /* #define BCM_XGS_ECMP DS_BCM_XGS_ECMP_TBL_TBL_CODE 2550` */
      xgs_deps_type = BCM_XGS_ECMP;
      break;

    case DPAL_VXLAN_PATH:
      /* #define BCM_XGS_VXLAN_FLOW_OL_PATH */
      /*         DS_BCM_XGS_VXLAN_FLOW_PATH_TBL_TBL_CODE - 34004 */
      xgs_deps_type = BCM_XGS_VXLAN_FLOW_OL_PATH;
      break;

    default:
      {
        char buf[256];
        snprintf(buf, 256, "%s:%u\n", "Invalid deps type in route",
                 info->deps_type);

        bcmsdk_trace_init_error(buf, 0);
      }
      return RET_CODE_ARG_INVALID;
  }
}

bcmsdk_route_ipv4_api
  if (!host_route) {
    xlate_fib_ipv4_to_bcmsdk_route_obj(&v4_prefix, hw_id, optype, &sdk_l3rt,
                   (dep_type == DS_FIB_EGRESS_ECMP_TBL_CODE) ? true : false, >>>> We only care of ECMP or not, it could be OL or UL.
                   &upd_optype, is_path_resolved);
  } else {
    xlate_fib_ipv4_to_bcmsdk_host_obj(v4_prefix.v4_pfx_addr, hw_id, optype,
                                      &sdk_host_info,
                   (dep_type == DS_FIB_EGRESS_ECMP_TBL_CODE) ? true : false,
                   is_path_resolved);
  }


bcmsdk_l3_ecmp_main_cb
		if (dep_type == DS_FIB_EGRESS_VXLANPATH_TBL_CODE) {
			rc = bcmsdk_vxlan_flow_ol_ecmp_api(obj, obj_old, fib_obj, optype, ctxt, &hwid);
          >> Program egress object with a list of BCM_XGS_VXLAN_FLOW_OL_PATH objects.
		} else {
			rc = bcmsdk_ecmp_api(cp_obj->obj_info, optype,
													 dpal_plugin_get_dev_id(dh), &hwid, &overlay_hwid);
		}

BCM_XGS_VXLAN_FLOW_OL_PATH
  case DPAL_VXLAN_PATH:
    return bcmsdk_vxlan_flow_path_api(wh, obj, obj_old, optype); , the tunnel ID points to the network VP.
			//Create OL l3 egress interface
			rc = bcmsdk_vxlan_flow_sdk_l3_egress_create(unit, optype, (mac_addr_t *)&path->nh_mac,
																									path->l3if, path->net_vp, &path->egress_if);

			static inline ret_code_e
			bcmsdk_vxlan_flow_sdk_l3_egress_create (dpal_switch_unit_t unit,
																							dpal_optype_e optype,
																							mac_addr_t *mac_addr,
																							uint32_t intf_id,
																							uint32_t net_vp,
																							uint32_t *egr_id)
			{
				int rv = 0;
				uint32_t flags = 0;
				bcm_l3_egress_t egr_intf;
				bcm_l3_egress_t_init(&egr_intf);

				if (optype == DPAL_OBJ_UPDATE) {
					rv = bcm_l3_egress_get(unit, *egr_id, &egr_intf);
					if (BCM_FAILURE(rv)) {
						bcmsdk_trace_vxlan_path_error("Error updating l3 interface with id",
																					bcm_errmsg(rv), unit, *egr_id);
						return RET_CODE_FAILURE;
					}
					flags = BCM_L3_WITH_ID|BCM_L3_REPLACE;
				}


				egr_intf.port = net_vp;
				egr_intf.intf = intf_id;
				egr_intf.flags2 |= BCM_L3_FLOW_ONLY;
				memcpy(egr_intf.mac_addr, (uint8_t *)&mac_addr[0], IEEE_MACLEN);
				rv = bcm_l3_egress_create(unit, flags, &egr_intf, (bcm_if_t *)egr_id);
				if (BCM_FAILURE(rv)) {
					bcmsdk_trace_vxlan_path_error("Error creating l3 egress with vpnid",
																				bcm_errmsg(rv), unit, intf_id);
					return RET_CODE_FAILURE;
				}
				return RET_CODE_SUCCESS;
			}





<2023-09-12 04:57:02>
npci-BL6-34# show dpal object-type dpal-nexthop-group
dpal object-type dpal-nexthop-group
 stats total-creates    45
 stats total-placeholders 0
 stats total-deletes    40
 stats total-updates    13
 stats total-create-deferrals 4
 stats total-update-deferrals 0
 stats total-delete-deferrals 4
 stats total-create-failures 0
 stats total-update-failures 0
 stats total-delete-failures 0
 stats total-retries    0
 stats total-in-retry-q 0
 stats total-in-slow-retry-q 0
 generic-entries entry
                                                                             PENDING  PENDING
                            ATTR  ATTR                                       PARENT   PARENT
KEY                STATE    NAME  VALUE  PARENT TYPE      PARENT KEY         TYPE     KEY
-----------------------------------------------------------------------------------------------
ecmpid:1073741903  created               dpal-nexthop     pathid:49
                                         dpal-nexthop     pathid:51
ecmpid:1073743282  created               dpal-vxlan-path  vxlan_pathid:1456
                                         dpal-vxlan-path  vxlan_pathid:1452
                                         dpal-vxlan-path  vxlan_pathid:1451
                                         dpal-vxlan-path  vxlan_pathid:1449
ecmpid:1073743298  created               dpal-vxlan-path  vxlan_pathid:1456
                                         dpal-vxlan-path  vxlan_pathid:1452
ecmpid:1073743307  created               dpal-nexthop     pathid:1480
                                         dpal-nexthop     pathid:1336
ecmpid:1073743323  created               dpal-vxlan-path  vxlan_pathid:1451
                                         dpal-vxlan-path  vxlan_pathid:1449


<2023-09-12 04:58:32>
npci-BL6-34#  show dpal object-type dpal-nexthop-group ecmpid:1073743323
----------------------------------------------------------------------------^
syntax error: unknown element

<2023-09-12 05:00:55>
npci-BL6-34# show dpal object-type dpal-nexthop-group generic-entries entry ecmpid:1073743323
generic-entries entry ecmpid:1073743323
 entry
                                                                             PENDING  PENDING
                            ATTR  ATTR                                       PARENT   PARENT
KEY                STATE    NAME  VALUE  PARENT TYPE      PARENT KEY         TYPE     KEY
-----------------------------------------------------------------------------------------------
ecmpid:1073743323  created               dpal-vxlan-path  vxlan_pathid:1451
                                         dpal-vxlan-path  vxlan_pathid:1449


<2023-09-12 05:01:06>
npci-BL6-34# show dpal object-type dpal-vxlan-path generic-entries entry vxlan_pathid:1451
generic-entries entry vxlan_pathid:1451
 entry
                                                                       PENDING  PENDING
                            ATTR  ATTR                                 PARENT   PARENT
KEY                STATE    NAME  VALUE  PARENT TYPE     PARENT KEY    TYPE     KEY
-----------------------------------------------------------------------------------------
vxlan_pathid:1451  created               dpal-vxlan-vni  vni_id:1000
                                         dpal-tunnels    tunnel_id:22


<2023-09-12 05:01:43>
npci-BL6-34# show dpal object-type dpal-tunnels generic-entries entry tunnel_id:22
generic-entries entry tunnel_id:22
 entry
                                                                           PENDING  PENDING
                       ATTR  ATTR                                          PARENT   PARENT
KEY           STATE    NAME  VALUE  PARENT TYPE         PARENT KEY         TYPE     KEY
---------------------------------------------------------------------------------------------
tunnel_id:22  created               dpal-nexthop-group  ecmpid:1073743307


  case DPAL_TUNNELS:
    info = (ds_fib_tunnel_t *)obj->obj_info;
    ds_fib_tunnel_encap_get(info, (int32_t*)&type);
    if (type == DS_TUNNEL_ENCAP_ENUM_ENCAP_VXLAN) {
      return bcmsdk_ip4_tnl_api(wh, obj, obj_old, optype);
    } else  {
      return RET_CODE_FAILURE;
    }

Creating the tunnel creates the network VP.

		  /* Create tunnel init pd obj */
  ds_bcm_xgs_vxlan_flow_tnl_init_init(&tnl_init);
  ds_bcm_xgs_vxlan_flow_tnl_init_tnlid_set(&tnl_init, tnlid);
  ds_bcm_xgs_vxlan_flow_tnl_init_tnl_dip_set(&tnl_init, tnl_dip);
  ti.obj_type = BCM_XGS_VXLAN_FLOW_TNL_INIT;
  ti.obj_info = &tnl_init; ---> No main cbk only place holder.

  /* Create tunnel term anc pd obj */
  ds_bcm_xgs_vxlan_flow_tnl_term_anc_init(&tnl_term_anc);
  ds_bcm_xgs_vxlan_flow_tnl_term_anc_tnlid_set(&tnl_term_anc, tnlid);
  ds_bcm_xgs_vxlan_flow_tnl_term_anc_tnl_sip_set(&tnl_term_anc, tnl_sip);
  tt.obj_type = BCM_XGS_VXLAN_FLOW_TNL_TERM_ANC; ---> no main cbk only place holder.
  /* Create nw vp pd obj */
  ds_bcm_xgs_vxlan_flow_nw_vp_init(&nw_vp);
  ds_bcm_xgs_vxlan_flow_nw_vp_tnl_dip_set(&nw_vp, tnl_dip);
  ds_bcm_xgs_vxlan_flow_nw_vp_tnl_sip_set(&nw_vp, tnl_sip);
  ds_bcm_xgs_vxlan_flow_nw_vp_tnl_udp_set(&nw_vp, (uint16_t)udp);
  ds_bcm_xgs_vxlan_flow_nw_vp_nextobj_set(&nw_vp, egr);
  ds_bcm_xgs_vxlan_flow_nw_vp_tnl_id_set(&nw_vp, tnlid);
  ds_bcm_xgs_vxlan_flow_nw_vp_flood_learn_set(&nw_vp, flood_learn);

  /*
   * In esw, l3 underlay ecmp, is supported via dglp flow.
   * From ltsw onward, proper l3 underlay ecmp flow is supported.
   */
  if (g_asic_global_ctxt.xgs_cb.is_feature_supported(unit, xgs_feature_ltsw_vxlan)) {
    ds_bcm_xgs_vxlan_flow_nw_vp_dep_type_set(&nw_vp,
      (dep == DPAL_NEXTHOP) ? BCM_XGS_VXLAN_FLOW_NH : BCM_XGS_VXLAN_FLOW_UL_ECMP);
  } else {
    ds_bcm_xgs_vxlan_flow_nw_vp_dep_type_set(&nw_vp,
      (dep == DPAL_NEXTHOP) ? BCM_XGS_VXLAN_FLOW_NH : BCM_XGS_VXLAN_FLOW_DGLP);
  }

  vp.obj_type = BCM_XGS_VXLAN_FLOW_NW_VP;
  vp.obj_info = &nw_vp;

fib.tunnels.json
   "XRefInfo": {
        "DepKeys": [
            {
                "Name": "cplane_nexthop",
                "DemuxAttr": "dep_type",
                "Info": [
                    {
                        "Type": "fib.egress.path",
                        "KeyAttrs": [
                            "egressobj"
                        ]
                    },
                    {
                        "Type": "fib.egress.ecmp",
                        "KeyAttrs": [
                            "egressobj"
                        ]
                    }
                ]
            }
        ]
    }



<2023-09-12 05:02:00>
npci-BL6-34# show dpal object-type dpal-nexthop-group generic-entries entry ecmpid:1073743307
generic-entries entry ecmpid:1073743307
 entry
                                                                    PENDING  PENDING
                            ATTR  ATTR                              PARENT   PARENT
KEY                STATE    NAME  VALUE  PARENT TYPE   PARENT KEY   TYPE     KEY
--------------------------------------------------------------------------------------
ecmpid:1073743307  created               dpal-nexthop  pathid:1480
                                         dpal-nexthop  pathid:1336


<2023-09-12 05:02:15>
npci-BL6-34# show dpal object-type dpal-nexthop generic-entries entry pathid:1480
generic-entries entry pathid:1480
 entry
                                                                             PENDING  PENDING
                                        ATTR                                 PARENT   PARENT
KEY          STATE    ATTR NAME         VALUE   PARENT TYPE   PARENT KEY     TYPE     KEY
-----------------------------------------------------------------------------------------------
pathid:1480  created  path-hwid         132778
                      path-l3intf-hwid  6150    dpal-l3-intf  ifindex:0x41f


<2023-09-12 05:02:27>
npci-BL6-34#
