 if (type != FP_GROUP_TYPE_VFP_COMMON) {
    if (g_asic_global_ctxt.xgs_cb.fp_flexctr_action_create_cb) {
      int ctr_obj = bcmsdk_fp_get_counter_object(fp_stage, type);
      int num_stat = bcmsdk_fp_get_num_stats(fp_stage);
      int count_drop = 1;
      uint32_t flexctr_id;
      rv = g_asic_global_ctxt.xgs_cb.fp_flexctr_action_create_cb(unit, *fp_group_id,
                                                                 fp_stage, ctr_obj,
                                                                 num_stat, count_drop,
                                                                 &flexctr_id);
      if (BCM_FAILURE(rv)) {
        SYSLOG_CRIT("ACL", "can not create Flexctr for  (%u,%u)", type,subtype);
        bcmsdk_trace_acl_gen_error("Flexctr create failed\n", bcm_errmsg(rv));
        return false;
      }
      // Populate required structs for flexctr action info;
      fp_group_flexctr_id[type][subtype] = flexctr_id;
    }
  }

  fp_group_alloc_id[type][subtype] = *fp_group_id;




    if (g_asic_global_ctxt.xgs_cb.fp_flexctr_attach_cb) {
      flexctr_id = fp_group_flexctr_id[fp_grp_info.fp_group_type][fp_grp_info.fp_group_subtype];

      ds_bcm_xgs_qos_service_policy_flexctr_id_set(tgt_obj, flexctr_id);


  if (g_asic_global_ctxt.xgs_cb.fp_flexctr_attach_cb) {
    arg.hw_stats_id_2 = hw_stats_id_2;
    arg.flexctr_id = flexctr_id;
  }


  rv = bcm_flexctr_action_create(unit, options, &action, &flexctr_action_id);
  if (rv != BCM_E_NONE) {
    LOG_ERR_MSG(BCM_PLUGIN_STR,"%s failed to create flexctr_action for group:%d, err:%s\n",
                __FUNCTION__, group_id, bcm_errmsg(rv));
    return RET_CODE_FAILURE;
  }
  // Let the flexctr indexer allocated an index for this ID
  // get the indexer from the global context
  rc = indexer_alloc(g_asic_global_ctxt.flexctr_ctxt->flexctr_indexer, &flexctr_id_);
  if (rc != RET_CODE_SUCCESS) {
    LOG_ERR_MSG(BCM_PLUGIN_STR, "%s() failed to allocate flexctr_index for group %d\n",
                __FUNCTION__, group_id);
    rc = bcmsdk_flexctr_fp_group_action_destroy(unit, group_id, flexctr_action_id);
    return RET_CODE_FAILURE;
  }

  flexctr[flexctr_id_].flexctr_action_id = flexctr_action_id;
  flexctr[flexctr_id_].num_stat = index_num;
  // Create stat indexer for flexctr action

